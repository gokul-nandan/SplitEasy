import React, { useState, useEffect } from "react";
import { Expense, Payment, User, Dispute } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
  Receipt, 
  Users, 
  DollarSign, 
  AlertCircle, 
  Plus,
  TrendingUp,
  Clock,
  CheckCircle
} from "lucide-react";

import StatsOverview from "../components/admin/StatsOverview";
import RecentExpenses from "../components/admin/RecentExpenses";
import PendingDisputes from "../components/admin/PendingDisputes";
import PaymentStatusChart from "../components/admin/PaymentStatusChart";

export default function AdminDashboard() {
  const [stats, setStats] = useState({
    totalExpenses: 0,
    totalAmount: 0,
    pendingAmount: 0,
    totalUsers: 0,
    pendingDisputes: 0
  });
  const [recentExpenses, setRecentExpenses] = useState([]);
  const [pendingDisputes, setPendingDisputes] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      const [expenses, payments, users, disputes] = await Promise.all([
        Expense.list("-created_date", 10),
        Payment.list("-created_date"),
        User.list(),
        Dispute.filter({status: "pending"})
      ]);

      const totalAmount = expenses.reduce((sum, exp) => sum + (exp.total_amount || 0), 0);
      const paidAmount = payments.reduce((sum, payment) => sum + (payment.amount || 0), 0);

      setStats({
        totalExpenses: expenses.length,
        totalAmount,
        pendingAmount: totalAmount - paidAmount,
        totalUsers: users.length,
        pendingDisputes: disputes.length
      });

      setRecentExpenses(expenses);
      setPendingDisputes(disputes);
    } catch (error) {
      console.error("Error loading dashboard data:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-6 space-y-8 max-w-7xl mx-auto">
      <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold text-slate-900 mb-2">Admin Dashboard</h1>
          <p className="text-slate-600">Manage expenses and track payments for your community</p>
        </div>
        <Link to={createPageUrl("CreateExpense")}>
          <Button className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 shadow-lg">
            <Plus className="w-5 h-5 mr-2" />
            Add New Expense
          </Button>
        </Link>
      </div>

      <StatsOverview stats={stats} loading={loading} />

      <div className="grid lg:grid-cols-3 gap-8">
        <div className="lg:col-span-2 space-y-8">
          <RecentExpenses expenses={recentExpenses} loading={loading} />
          <PaymentStatusChart />
        </div>
        
        <div className="space-y-8">
          <PendingDisputes disputes={pendingDisputes} loading={loading} />
          
          <Card className="bg-gradient-to-br from-green-50 to-emerald-50 border-green-200/50">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-green-800">
                <CheckCircle className="w-5 h-5" />
                Quick Actions
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <Link to={createPageUrl("CreateExpense")}>
                <Button variant="outline" className="w-full justify-start border-green-200 hover:bg-green-100">
                  <Receipt className="w-4 h-4 mr-2" />
                  Create New Expense
                </Button>
              </Link>
              <Link to={createPageUrl("ManageUsers")}>
                <Button variant="outline" className="w-full justify-start border-green-200 hover:bg-green-100">
                  <Users className="w-4 h-4 mr-2" />
                  Manage Users
                </Button>
              </Link>
              <Link to={createPageUrl("AdminDisputes")}>
                <Button variant="outline" className="w-full justify-start border-green-200 hover:bg-green-100">
                  <AlertCircle className="w-4 h-4 mr-2" />
                  Review Disputes
                </Button>
              </Link>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
